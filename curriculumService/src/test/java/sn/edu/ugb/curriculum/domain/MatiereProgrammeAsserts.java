package sn.edu.ugb.curriculum.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MatiereProgrammeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereProgrammeAllPropertiesEquals(MatiereProgramme expected, MatiereProgramme actual) {
        assertMatiereProgrammeAutoGeneratedPropertiesEquals(expected, actual);
        assertMatiereProgrammeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereProgrammeAllUpdatablePropertiesEquals(MatiereProgramme expected, MatiereProgramme actual) {
        assertMatiereProgrammeUpdatableFieldsEquals(expected, actual);
        assertMatiereProgrammeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereProgrammeAutoGeneratedPropertiesEquals(MatiereProgramme expected, MatiereProgramme actual) {
        assertThat(actual)
            .as("Verify MatiereProgramme auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereProgrammeUpdatableFieldsEquals(MatiereProgramme expected, MatiereProgramme actual) {
        assertThat(actual)
            .as("Verify MatiereProgramme relevant properties")
            .satisfies(a -> assertThat(a.getNomMatiere()).as("check nomMatiere").isEqualTo(expected.getNomMatiere()))
            .satisfies(a -> assertThat(a.getHeuresCours()).as("check heuresCours").isEqualTo(expected.getHeuresCours()))
            .satisfies(a -> assertThat(a.getUeId()).as("check ueId").isEqualTo(expected.getUeId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereProgrammeUpdatableRelationshipsEquals(MatiereProgramme expected, MatiereProgramme actual) {
        // empty method
    }
}
