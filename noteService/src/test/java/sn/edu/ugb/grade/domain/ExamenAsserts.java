package sn.edu.ugb.grade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExamenAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExamenAllPropertiesEquals(Examen expected, Examen actual) {
        assertExamenAutoGeneratedPropertiesEquals(expected, actual);
        assertExamenAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExamenAllUpdatablePropertiesEquals(Examen expected, Examen actual) {
        assertExamenUpdatableFieldsEquals(expected, actual);
        assertExamenUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExamenAutoGeneratedPropertiesEquals(Examen expected, Examen actual) {
        assertThat(actual)
            .as("Verify Examen auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExamenUpdatableFieldsEquals(Examen expected, Examen actual) {
        assertThat(actual)
            .as("Verify Examen relevant properties")
            .satisfies(a -> assertThat(a.getTypeExamen()).as("check typeExamen").isEqualTo(expected.getTypeExamen()))
            .satisfies(a -> assertThat(a.getDateExamen()).as("check dateExamen").isEqualTo(expected.getDateExamen()))
            .satisfies(a -> assertThat(a.getMatiereId()).as("check matiereId").isEqualTo(expected.getMatiereId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExamenUpdatableRelationshipsEquals(Examen expected, Examen actual) {
        // empty method
    }
}
