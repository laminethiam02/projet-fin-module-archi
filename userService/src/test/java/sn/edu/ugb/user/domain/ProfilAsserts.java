package sn.edu.ugb.user.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProfilAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilAllPropertiesEquals(Profil expected, Profil actual) {
        assertProfilAutoGeneratedPropertiesEquals(expected, actual);
        assertProfilAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilAllUpdatablePropertiesEquals(Profil expected, Profil actual) {
        assertProfilUpdatableFieldsEquals(expected, actual);
        assertProfilUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilAutoGeneratedPropertiesEquals(Profil expected, Profil actual) {
        assertThat(actual)
            .as("Verify Profil auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilUpdatableFieldsEquals(Profil expected, Profil actual) {
        assertThat(actual)
            .as("Verify Profil relevant properties")
            .satisfies(a -> assertThat(a.getNomComplet()).as("check nomComplet").isEqualTo(expected.getNomComplet()))
            .satisfies(a -> assertThat(a.getAdresse()).as("check adresse").isEqualTo(expected.getAdresse()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()))
            .satisfies(a -> assertThat(a.getTelephone()).as("check telephone").isEqualTo(expected.getTelephone()))
            .satisfies(a -> assertThat(a.getCompteId()).as("check compteId").isEqualTo(expected.getCompteId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilUpdatableRelationshipsEquals(Profil expected, Profil actual) {
        // empty method
    }
}
