package sn.edu.ugb.user.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CompteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompteAllPropertiesEquals(Compte expected, Compte actual) {
        assertCompteAutoGeneratedPropertiesEquals(expected, actual);
        assertCompteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompteAllUpdatablePropertiesEquals(Compte expected, Compte actual) {
        assertCompteUpdatableFieldsEquals(expected, actual);
        assertCompteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompteAutoGeneratedPropertiesEquals(Compte expected, Compte actual) {
        assertThat(actual)
            .as("Verify Compte auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompteUpdatableFieldsEquals(Compte expected, Compte actual) {
        assertThat(actual)
            .as("Verify Compte relevant properties")
            .satisfies(a -> assertThat(a.getLogin()).as("check login").isEqualTo(expected.getLogin()))
            .satisfies(a -> assertThat(a.getMotDePasse()).as("check motDePasse").isEqualTo(expected.getMotDePasse()))
            .satisfies(a -> assertThat(a.getActif()).as("check actif").isEqualTo(expected.getActif()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompteUpdatableRelationshipsEquals(Compte expected, Compte actual) {
        // empty method
    }
}
