package sn.edu.ugb.teacher.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChargeHoraireAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChargeHoraireAllPropertiesEquals(ChargeHoraire expected, ChargeHoraire actual) {
        assertChargeHoraireAutoGeneratedPropertiesEquals(expected, actual);
        assertChargeHoraireAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChargeHoraireAllUpdatablePropertiesEquals(ChargeHoraire expected, ChargeHoraire actual) {
        assertChargeHoraireUpdatableFieldsEquals(expected, actual);
        assertChargeHoraireUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChargeHoraireAutoGeneratedPropertiesEquals(ChargeHoraire expected, ChargeHoraire actual) {
        assertThat(actual)
            .as("Verify ChargeHoraire auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChargeHoraireUpdatableFieldsEquals(ChargeHoraire expected, ChargeHoraire actual) {
        assertThat(actual)
            .as("Verify ChargeHoraire relevant properties")
            .satisfies(a -> assertThat(a.getNombreHeures()).as("check nombreHeures").isEqualTo(expected.getNombreHeures()))
            .satisfies(a -> assertThat(a.getContratId()).as("check contratId").isEqualTo(expected.getContratId()))
            .satisfies(a -> assertThat(a.getClasseId()).as("check classeId").isEqualTo(expected.getClasseId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChargeHoraireUpdatableRelationshipsEquals(ChargeHoraire expected, ChargeHoraire actual) {
        // empty method
    }
}
