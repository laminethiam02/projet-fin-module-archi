package sn.edu.ugb.teacher.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContratAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratAllPropertiesEquals(Contrat expected, Contrat actual) {
        assertContratAutoGeneratedPropertiesEquals(expected, actual);
        assertContratAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratAllUpdatablePropertiesEquals(Contrat expected, Contrat actual) {
        assertContratUpdatableFieldsEquals(expected, actual);
        assertContratUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratAutoGeneratedPropertiesEquals(Contrat expected, Contrat actual) {
        assertThat(actual)
            .as("Verify Contrat auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratUpdatableFieldsEquals(Contrat expected, Contrat actual) {
        assertThat(actual)
            .as("Verify Contrat relevant properties")
            .satisfies(a -> assertThat(a.getTypeContrat()).as("check typeContrat").isEqualTo(expected.getTypeContrat()))
            .satisfies(a -> assertThat(a.getDateDebut()).as("check dateDebut").isEqualTo(expected.getDateDebut()))
            .satisfies(a -> assertThat(a.getDateFin()).as("check dateFin").isEqualTo(expected.getDateFin()))
            .satisfies(a -> assertThat(a.getProfilId()).as("check profilId").isEqualTo(expected.getProfilId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratUpdatableRelationshipsEquals(Contrat expected, Contrat actual) {
        // empty method
    }
}
