package sn.edu.ugb.student.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReleveNoteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReleveNoteAllPropertiesEquals(ReleveNote expected, ReleveNote actual) {
        assertReleveNoteAutoGeneratedPropertiesEquals(expected, actual);
        assertReleveNoteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReleveNoteAllUpdatablePropertiesEquals(ReleveNote expected, ReleveNote actual) {
        assertReleveNoteUpdatableFieldsEquals(expected, actual);
        assertReleveNoteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReleveNoteAutoGeneratedPropertiesEquals(ReleveNote expected, ReleveNote actual) {
        assertThat(actual)
            .as("Verify ReleveNote auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReleveNoteUpdatableFieldsEquals(ReleveNote expected, ReleveNote actual) {
        assertThat(actual)
            .as("Verify ReleveNote relevant properties")
            .satisfies(a -> assertThat(a.getSemestre()).as("check semestre").isEqualTo(expected.getSemestre()))
            .satisfies(a -> assertThat(a.getNoteGlobale()).as("check noteGlobale").isEqualTo(expected.getNoteGlobale()))
            .satisfies(a -> assertThat(a.getDossierId()).as("check dossierId").isEqualTo(expected.getDossierId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReleveNoteUpdatableRelationshipsEquals(ReleveNote expected, ReleveNote actual) {
        // empty method
    }
}
