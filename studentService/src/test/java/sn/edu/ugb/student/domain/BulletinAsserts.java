package sn.edu.ugb.student.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BulletinAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBulletinAllPropertiesEquals(Bulletin expected, Bulletin actual) {
        assertBulletinAutoGeneratedPropertiesEquals(expected, actual);
        assertBulletinAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBulletinAllUpdatablePropertiesEquals(Bulletin expected, Bulletin actual) {
        assertBulletinUpdatableFieldsEquals(expected, actual);
        assertBulletinUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBulletinAutoGeneratedPropertiesEquals(Bulletin expected, Bulletin actual) {
        assertThat(actual)
            .as("Verify Bulletin auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBulletinUpdatableFieldsEquals(Bulletin expected, Bulletin actual) {
        assertThat(actual)
            .as("Verify Bulletin relevant properties")
            .satisfies(a -> assertThat(a.getAnneeAcademique()).as("check anneeAcademique").isEqualTo(expected.getAnneeAcademique()))
            .satisfies(a -> assertThat(a.getMoyenne()).as("check moyenne").isEqualTo(expected.getMoyenne()))
            .satisfies(a -> assertThat(a.getMention()).as("check mention").isEqualTo(expected.getMention()))
            .satisfies(a -> assertThat(a.getDossierId()).as("check dossierId").isEqualTo(expected.getDossierId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBulletinUpdatableRelationshipsEquals(Bulletin expected, Bulletin actual) {
        // empty method
    }
}
