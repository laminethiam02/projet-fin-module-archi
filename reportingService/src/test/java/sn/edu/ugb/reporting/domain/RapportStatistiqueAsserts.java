package sn.edu.ugb.reporting.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RapportStatistiqueAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapportStatistiqueAllPropertiesEquals(RapportStatistique expected, RapportStatistique actual) {
        assertRapportStatistiqueAutoGeneratedPropertiesEquals(expected, actual);
        assertRapportStatistiqueAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapportStatistiqueAllUpdatablePropertiesEquals(RapportStatistique expected, RapportStatistique actual) {
        assertRapportStatistiqueUpdatableFieldsEquals(expected, actual);
        assertRapportStatistiqueUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapportStatistiqueAutoGeneratedPropertiesEquals(RapportStatistique expected, RapportStatistique actual) {
        assertThat(actual)
            .as("Verify RapportStatistique auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapportStatistiqueUpdatableFieldsEquals(RapportStatistique expected, RapportStatistique actual) {
        assertThat(actual)
            .as("Verify RapportStatistique relevant properties")
            .satisfies(a -> assertThat(a.getTitre()).as("check titre").isEqualTo(expected.getTitre()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getDateGeneration()).as("check dateGeneration").isEqualTo(expected.getDateGeneration()))
            .satisfies(a -> assertThat(a.getIndicateurId()).as("check indicateurId").isEqualTo(expected.getIndicateurId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapportStatistiqueUpdatableRelationshipsEquals(RapportStatistique expected, RapportStatistique actual) {
        // empty method
    }
}
